graph TD
ts-order-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForNameBatch"|ts-station-service
ts-admin-order-service-->|"HTTP Verb: DELETE<br/>Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.deleteOrder"|ts-order-other-service
ts-admin-basic-info-service-->|"HTTP Verb: DELETE<br/>Arguments: [@PathVariable String configName, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: config.controller.ConfigController.deleteConfig"|ts-config-service
ts-preserve-other-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: assurance.controller.AssuranceController.createNewAssurance"|ts-assurance-service
ts-preserve-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]<br/>Return: ResponseEntity<Response><br/>Endpoint function: user.controller.UserController.getUserByUserId"|ts-user-service
ts-security-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.securityInfoCheck"|ts-order-service
ts-rebook-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: seat.controller.SeatController.create"|ts-seat-service
ts-execute-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.getOrderById"|ts-order-other-service
ts-cancel-service-->|"HTTP Verb: PUT<br/>Arguments: [@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.saveOrderInfo"|ts-order-service
ts-travel-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody TripInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel.controller.TravelController.queryInfo"|ts-travel-service
ts-admin-order-service-->|"HTTP Verb: PUT<br/>Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.updateOrder"|ts-order-other-service
ts-preserve-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: assurance.controller.AssuranceController.createNewAssurance"|ts-assurance-service
ts-admin-order-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.addcreateNewOrder"|ts-order-other-service
ts-seat-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String configName, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: config.controller.ConfigController.retrieve"|ts-config-service
ts-route-plan-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryById"|ts-route-service
ts-travel2-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryById"|ts-route-service
ts-admin-route-service-->|"HTTP Verb: DELETE<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.deleteRoute"|ts-route-service
ts-basic-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryById"|ts-route-service
ts-rebook-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-route-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel.controller.TravelController.getTripsByRouteId"|ts-travel-service
ts-admin-basic-info-service-->|"HTTP Verb: GET<br/>Arguments: [@RequestHeader HttpHeaders headers]<br/>Return: HttpEntity<br/>Endpoint function: contacts.controller.ContactsController.getAllContacts"|ts-contacts-service
ts-preserve-other-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]<br/>Return: ResponseEntity<Response><br/>Endpoint function: user.controller.UserController.getUserByUserId"|ts-user-service
ts-admin-basic-info-service-->|"HTTP Verb: DELETE<br/>Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.delete"|ts-train-service
ts-rebook-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: inside_payment.controller.InsidePaymentController.payDifference"|ts-inside-payment-service
ts-admin-travel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryById"|ts-route-service
ts-preserve-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: seat.controller.SeatController.create"|ts-seat-service
ts-basic-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> stationNameList, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForIdBatch"|ts-station-service
ts-preserve-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: seat.controller.SeatController.create"|ts-seat-service
ts-admin-order-service-->|"HTTP Verb: GET<br/>Arguments: [@RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.findAllOrder"|ts-order-service
ts-seat-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.getTicketListByDateAndTripId"|ts-order-other-service
ts-basic-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> names, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-preserve-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Order createOrder, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.createNewOrder"|ts-order-other-service
ts-travel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryById"|ts-route-service
ts-order-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForNameBatch"|ts-station-service
ts-basic-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> routeIds, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryByIds"|ts-route-service
ts-travel2-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.BasicController.queryForTravel"|ts-basic-service
ts-preserve-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.BasicController.queryForTravel"|ts-basic-service
ts-travel2-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: seat.controller.SeatController.getLeftTicketOfInterval"|ts-seat-service
ts-preserve-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]<br/>Return: HttpEntity<br/>Endpoint function: contacts.controller.ContactsController.getContactsByContactsId"|ts-contacts-service
ts-execute-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.modifyOrder"|ts-order-other-service
ts-travel-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: plan.controller.RoutePlanController.getMinStopStations"|ts-route-plan-service
ts-food-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: trainFood.controller.TrainFoodController.getTrainFoodOfTrip"|ts-train-food-service
ts-cancel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]<br/>Return: ResponseEntity<Response><br/>Endpoint function: user.controller.UserController.getUserByUserId"|ts-user-service
ts-admin-basic-info-service-->|"HTTP Verb: PUT<br/>Arguments: [@RequestBody Contacts info, @RequestHeader HttpHeaders headers]<br/>Return: HttpEntity<br/>Endpoint function: contacts.controller.ContactsController.modifyContacts"|ts-contacts-service
ts-preserve-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.BasicController.queryForTravel"|ts-basic-service
ts-admin-order-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.addcreateNewOrder"|ts-order-service
ts-food-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> stationNameList]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: food.controller.StationFoodController.getFoodStoresByStationNames"|ts-station-food-service
ts-rebook-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: inside_payment.controller.InsidePaymentController.drawBack"|ts-inside-payment-service
ts-preserve-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Consign request, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: consign.controller.ConsignController.insertConsign"|ts-consign-service
ts-basic-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-travel2-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-preserve-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String accountId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: security.controller.SecurityController.check"|ts-security-service
ts-route-plan-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String start, @PathVariable String end, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryByStartAndTerminal"|ts-route-service
ts-admin-basic-info-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Contacts aci, @RequestHeader HttpHeaders headers]<br/>Return: HttpEntity<?><br/>Endpoint function: contacts.controller.ContactsController.createNewContactsAdmin"|ts-contacts-service
ts-travel-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: plan.controller.RoutePlanController.getQuickestRoutes"|ts-route-plan-service
ts-travel2-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<Travel> infos, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.BasicController.queryForTravels"|ts-basic-service
ts-admin-order-service-->|"HTTP Verb: GET<br/>Arguments: [@RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.findAllOrder"|ts-order-other-service
ts-admin-travel-service-->|"HTTP Verb: GET<br/>Arguments: [@RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel2.controller.Travel2Controller.adminQueryAll"|ts-travel2-service
ts-cancel-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers]<br/>Return: boolean<br/>Endpoint function: notification.controller.NotificationController.order_cancel_success"|ts-notification-service
ts-preserve-other-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String accountId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: security.controller.SecurityController.check"|ts-security-service
ts-rebook-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryById"|ts-route-service
ts-preserve-other-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForStationId"|ts-station-service
ts-cancel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: inside_payment.controller.InsidePaymentController.drawBack"|ts-inside-payment-service
ts-basic-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> ridsAndTts, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: price.controller.PriceController.query"|ts-price-service
ts-travel-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: seat.controller.SeatController.getLeftTicketOfInterval"|ts-seat-service
ts-security-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.securityInfoCheck"|ts-order-other-service
ts-admin-basic-info-service-->|"HTTP Verb: DELETE<br/>Arguments: [@PathVariable String contactsId, @RequestHeader HttpHeaders headers]<br/>Return: HttpEntity<br/>Endpoint function: contacts.controller.ContactsController.deleteContacts"|ts-contacts-service
ts-preserve-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: foodsearch.controller.FoodController.createFoodOrder"|ts-food-service
ts-food-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel.controller.TravelController.getRouteByTripId"|ts-travel-service
ts-basic-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: price.controller.PriceController.query"|ts-price-service
ts-cancel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.getOrderById"|ts-order-service
ts-preserve-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForStationId"|ts-station-service
ts-inside-payment-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.modifyOrder"|ts-order-service
ts-preserve-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel.controller.TravelController.getTripAllDetailInfo"|ts-travel-service
ts-execute-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.modifyOrder"|ts-order-service
ts-cancel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.getOrderById"|ts-order-other-service
ts-execute-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.getOrderById"|ts-order-service
ts-seat-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.getTicketListByDateAndTripId"|ts-order-service
ts-admin-order-service-->|"HTTP Verb: PUT<br/>Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.updateOrder"|ts-order-service
ts-admin-order-service-->|"HTTP Verb: DELETE<br/>Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.deleteOrder"|ts-order-service
ts-admin-route-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> stationNameList, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForIdBatch"|ts-station-service
ts-travel-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<Travel> infos, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.BasicController.queryForTravels"|ts-basic-service
ts-travel-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: plan.controller.RoutePlanController.getCheapestRoutes"|ts-route-plan-service
ts-travel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-admin-travel-service-->|"HTTP Verb: GET<br/>Arguments: [@RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel.controller.TravelController.adminQueryAll"|ts-travel-service
ts-route-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel2.controller.Travel2Controller.getTripsByRouteId"|ts-travel2-service
ts-travel-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody edu.fudan.common.entity.TripInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel2.controller.Travel2Controller.queryInfo"|ts-travel2-service
ts-admin-route-service-->|"HTTP Verb: GET<br/>Arguments: [@RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: route.controller.RouteController.queryAll"|ts-route-service
ts-preserve-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Order createOrder, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: order.controller.OrderController.createNewOrder"|ts-order-service
ts-food-delivery-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String stationFoodStoreId, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: food.controller.StationFoodController.getFoodListByStationFoodStoreId"|ts-station-food-service
ts-cancel-service-->|"HTTP Verb: PUT<br/>Arguments: [@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.saveOrderInfo"|ts-order-other-service
ts-preserve-other-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]<br/>Return: HttpEntity<br/>Endpoint function: contacts.controller.ContactsController.getContactsByContactsId"|ts-contacts-service
ts-route-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody TripInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel.controller.TravelController.queryInfo"|ts-travel-service
ts-admin-travel-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-preserve-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody edu.fudan.common.entity.TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel2.controller.Travel2Controller.getTripAllDetailInfo"|ts-travel2-service
ts-travel-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: seat.controller.SeatController.getLeftTicketOfInterval"|ts-seat-service
ts-preserve-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Consign request, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: consign.controller.ConsignController.insertConsign"|ts-consign-service
ts-consign-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"|ts-consign-price-service
ts-user-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody AuthDto authDto]<br/>Return: HttpEntity<Response><br/>Endpoint function: auth.controller.AuthController.createDefaultUser"|ts-auth-service
ts-travel-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.BasicController.queryForTravel"|ts-basic-service
ts-preserve-other-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: foodsearch.controller.FoodController.createFoodOrder"|ts-food-service
ts-admin-travel-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody List<String> stationNameList, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForIdBatch"|ts-station-service
ts-inside-payment-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody Payment info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: com.trainticket.controller.PaymentController.pay"|ts-payment-service
ts-route-plan-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody edu.fudan.common.entity.TripInfo info, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: travel2.controller.Travel2Controller.queryInfo"|ts-travel2-service
ts-admin-route-service-->|"HTTP Verb: POST<br/>Arguments: [@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers]<br/>Return: ResponseEntity<Response><br/>Endpoint function: route.controller.RouteController.createAndModifyRoute"|ts-route-service
ts-auth-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers]<br/>Return: boolean<br/>Endpoint function: verifycode.controller.VerifyCodeController.verifyCode"|ts-verification-code-service
ts-basic-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: fdse.microservice.controller.StationController.queryForStationId"|ts-station-service
ts-travel-plan-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: train.controller.TrainController.retrieveByName"|ts-train-service
ts-inside-payment-service-->|"HTTP Verb: GET<br/>Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]<br/>Return: org.springframework.http.HttpEntity<br/>Endpoint function: other.controller.OrderOtherController.modifyOrder"|ts-order-other-service

