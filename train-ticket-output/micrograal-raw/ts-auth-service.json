{
		"name" : {
			"name" : "ts-auth-service",
			"fullName" : "ts-auth-service"
			}
		,
		"entities" : [
			{
				"entityName" : {
					"name" : "User",
					"fullName" : "User"
					}
				,
				"fields" : [
					{
						"name" : {
							"name" : "password",
							"fullName" : "password"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "roles",
							"fullName" : "roles"
							}
						,
						"type" : "Set<String>",
						"annotations" : [
							{
								"name" : "@ElementCollection",
								"stringValue" : null,
								"intValue" : null
								}
							,
							{
								"name" : "@CollectionTable",
								"stringValue" : null,
								"intValue" : null
								}
							
							]
						,
						"isReference" : true,
						"entityRefName" : "Set<String>",
						"isCollection" : true
						}
					,
					{
						"name" : {
							"name" : "userId",
							"fullName" : "userId"
							}
						,
						"type" : "String",
						"annotations" : [
							{
								"name" : "@Id",
								"stringValue" : null,
								"intValue" : null
								}
							,
							{
								"name" : "@Column",
								"stringValue" : null,
								"intValue" : null
								}
							
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "username",
							"fullName" : "username"
							}
						,
						"type" : "String",
						"annotations" : [
							{
								"name" : "@Column",
								"stringValue" : null,
								"intValue" : null
								}
							
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					
					]
				
				}
			,
			{
				"entityName" : {
					"name" : "TokenDto",
					"fullName" : "TokenDto"
					}
				,
				"fields" : [
					{
						"name" : {
							"name" : "userId",
							"fullName" : "userId"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "username",
							"fullName" : "username"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "token",
							"fullName" : "token"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					
					]
				
				}
			,
			{
				"entityName" : {
					"name" : "BasicAuthDto",
					"fullName" : "BasicAuthDto"
					}
				,
				"fields" : [
					{
						"name" : {
							"name" : "password",
							"fullName" : "password"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "verificationCode",
							"fullName" : "verificationCode"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "username",
							"fullName" : "username"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					
					]
				
				}
			,
			{
				"entityName" : {
					"name" : "AuthDto",
					"fullName" : "AuthDto"
					}
				,
				"fields" : [
					{
						"name" : {
							"name" : "password",
							"fullName" : "password"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "userId",
							"fullName" : "userId"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					,
					{
						"name" : {
							"name" : "userName",
							"fullName" : "userName"
							}
						,
						"type" : "String",
						"annotations" : [
							]
						,
						"isReference" : true,
						"entityRefName" : "String",
						"isCollection" : false
						}
					
					]
				
				}
			
			]
		,
		"restCalls" : [
			{
				"httpMethod" : "GET",
				"parentMethod" : "auth.service.impl.TokenServiceImpl.getToken",
				"returnType" : "java.lang.Boolean",
				"uri" : "ts-verification-code-service/api/v1/verifycode/verify/",
				"isCollection" : false,
				"restCallInClassName" : "auth.service.impl.TokenServiceImpl",
				"msName" : "ts-auth-service",
				"param" : {
					"isBody" : false,
					"isPath" : true,
					"paramType" : null,
					"paramCount" : 1
					}
				
				}
			
			]
		,
		"endpoints" : [
			{
				"httpMethod" : "DELETE",
				"parentMethod" : "auth.controller.UserController.deleteUserById",
				"arguments" : [
					"@PathVariable String userId",
					"@RequestHeader HttpHeaders headers"
					]
				,
				"returnType" : "class org.springframework.http.ResponseEntity<class edu.fudan.common.util.Response>",
				"path" : "/api/v1/users/{userId}",
				"isCollection" : true,
				"endpointInClassName" : "auth.controller.UserController",
				"msName" : "ts-auth-service"
				}
			,
			{
				"httpMethod" : "POST",
				"parentMethod" : "auth.controller.AuthController.createDefaultUser",
				"arguments" : [
					"@RequestBody AuthDto authDto"
					]
				,
				"returnType" : "class org.springframework.http.HttpEntity<class edu.fudan.common.util.Response>",
				"path" : "/api/v1/auth",
				"isCollection" : true,
				"endpointInClassName" : "auth.controller.AuthController",
				"msName" : "ts-auth-service"
				}
			,
			{
				"httpMethod" : "POST",
				"parentMethod" : "auth.controller.UserController.getToken",
				"arguments" : [
					"@RequestBody BasicAuthDto dao",
					"@RequestHeader HttpHeaders headers"
					]
				,
				"returnType" : "class org.springframework.http.ResponseEntity<class edu.fudan.common.util.Response>",
				"path" : "/api/v1/users/login",
				"isCollection" : true,
				"endpointInClassName" : "auth.controller.UserController",
				"msName" : "ts-auth-service"
				}
			,
			{
				"httpMethod" : "GET",
				"parentMethod" : "auth.controller.UserController.getHello",
				"arguments" : [
					]
				,
				"returnType" : "class java.lang.Object",
				"path" : "/api/v1/users/hello",
				"isCollection" : false,
				"endpointInClassName" : "auth.controller.UserController",
				"msName" : "ts-auth-service"
				}
			,
			{
				"httpMethod" : "GET",
				"parentMethod" : "auth.controller.UserController.getAllUser",
				"arguments" : [
					"@RequestHeader HttpHeaders headers"
					]
				,
				"returnType" : "class org.springframework.http.ResponseEntity<?>",
				"path" : "/api/v1/users",
				"isCollection" : true,
				"endpointInClassName" : "auth.controller.UserController",
				"msName" : "ts-auth-service"
				}
			,
			{
				"httpMethod" : "GET",
				"parentMethod" : "auth.controller.AuthController.getHello",
				"arguments" : [
					]
				,
				"returnType" : "class java.lang.String",
				"path" : "/api/v1/auth/hello",
				"isCollection" : false,
				"endpointInClassName" : "auth.controller.AuthController",
				"msName" : "ts-auth-service"
				}
			
			]
		
		}
	