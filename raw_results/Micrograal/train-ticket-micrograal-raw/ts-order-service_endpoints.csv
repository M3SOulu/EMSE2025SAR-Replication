ts-order-service,order.controller.OrderController,order.controller.OrderController.deleteOrder,@PathVariable_String_orderId&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/{orderId},DELETE,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.getOrderById,@PathVariable_String_orderId&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/{orderId},GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.securityInfoCheck,@PathVariable_String_checkDate&@PathVariable_String_accountId&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/security/{checkDate}/{accountId},GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.getOrderPrice,@PathVariable_String_orderId&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/price/{orderId},GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.getTicketListByDateAndTripId,@RequestBody_Seat_seatRequest&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/tickets,POST,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.findAllOrder,@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order,GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.queryOrders,@RequestBody_OrderInfo_qi&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/query,POST,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.calculateSoldTicket,@PathVariable_String_travelDate&@PathVariable_String_trainNumber&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/{travelDate}/{trainNumber},GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.addcreateNewOrder,@RequestBody_Order_order&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/admin,POST,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.payOrder,@PathVariable_String_orderId&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/orderPay/{orderId},GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.createNewOrder,@RequestBody_Order_createOrder&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order,POST,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.saveOrderInfo,@RequestBody_Order_orderInfo&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order,PUT,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.updateOrder,@RequestBody_Order_order&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/admin,PUT,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.queryOrdersForRefresh,@RequestBody_OrderInfo_qi&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/refresh,POST,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.modifyOrder,@PathVariable_String_orderId&@PathVariable_int_status&@RequestHeader_HttpHeaders_headers,/api/v1/orderservice/order/status/{orderId}/{status},GET,class org.springframework.http.HttpEntity,false
ts-order-service,order.controller.OrderController,order.controller.OrderController.home,,/api/v1/orderservice/welcome,GET,class java.lang.String,false
